name: Build, Test, Publish NuGet

on:
  push:
    branches:
      - master
    tags:
      - "v*"

jobs:
  build-test-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Extract version from tag (if present)
      id: extract-version
      run: |
        if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "IS_TAG=true" >> $GITHUB_ENV
        else
          echo "VERSION=dev" >> $GITHUB_ENV
          echo "IS_TAG=false" >> $GITHUB_ENV
        fi

    - name: Check for release notes
      id: check-release-notes
      run: |
        if [ -f release-notes.txt ]; then
          echo "RELEASE_NOTES_EXISTS=true" >> $GITHUB_ENV
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          cat release-notes.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        else
          echo "RELEASE_NOTES_EXISTS=false" >> $GITHUB_ENV
        fi

    - name: Update .csproj version and release notes
      run: |
        if [ "$VERSION" != "dev" ]; then
          sed -i "s|<Version>.*</Version>|<Version>${VERSION}</Version>|" CQRSMediatr/CQRSMediatr.csproj
        fi

        if [ "$RELEASE_NOTES_EXISTS" == "true" ]; then
          RELEASE_NOTES_ESCAPED=$(echo "${RELEASE_NOTES}" | sed 's/[&/\]/\\&/g')
          sed -i "s|<PackageReleaseNotes>.*</PackageReleaseNotes>|<PackageReleaseNotes>${RELEASE_NOTES_ESCAPED}</PackageReleaseNotes>|" CQRSMediatr/CQRSMediatr.csproj
        fi

    - name: Commit changes to .csproj if needed
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add CQRSMediatr/CQRSMediatr.csproj || true
        git commit -m "[skip ci] Update version/release notes to $VERSION" || echo "No changes to commit"
        git push origin HEAD:master || echo "No changes pushed"

    - name: Restore dependencies
      run: dotnet restore

    - name: Build library
      run: dotnet build CQRSMediatr/CQRSMediatr.csproj --configuration Release --no-restore

    - name: Run tests
      run: dotnet test CQRSMediatr.Test/CQRSMediatr.Test.csproj --configuration Release --no-build --verbosity normal

    - name: Pack NuGet (if version tag exists)
      if: env.IS_TAG == 'true'
      run: |
        if [ "$RELEASE_NOTES_EXISTS" == "true" ]; then
          dotnet pack CQRSMediatr/CQRSMediatr.csproj --configuration Release --no-build \
            -p:PackageVersion=$VERSION \
            -p:PackageReleaseNotes="$RELEASE_NOTES"
        else
          dotnet pack CQRSMediatr/CQRSMediatr.csproj --configuration Release --no-build \
            -p:PackageVersion=$VERSION
        fi

    - name: Publish to NuGet
      if: env.IS_TAG == 'true'
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: |
        dotnet nuget push CQRSMediatr/bin/Release/*.nupkg \
          --api-key $NUGET_API_KEY \
          --source https://api.nuget.org/v3/index.json
